---
title: Practice Submitting Pull Requests
date: last-modified
author:
  - Leah Wasser
  - Jenny Palomino
  - Max Joseph
  - Elsa Culler
description: |
  A pull request allows anyone to suggest changes to a repository on GitHub
  that can be easily reviewed by others. Learn how to submit pull requests
  on GitHub.com to suggest changes to a GitHub repository.
learning-goals: 
  - Define branches in GitHub repositories
  - Submit a pull request of changes to a repository on `GitHub.com`. 
jupyter: python3
---

In this lesson, you will learn how to submit a pull request to suggest that your edits be included in another repository (e.g. the original repository from which you forked and cloned a repository).

You will need a web browser and your `GitHub.com` login (username and password).

For this assignment, you will add information about your home town to a .csv file. We will then make a map of everyone's home towns!

## Step 1: Navigate to the repository where you will add your home town info.

Open up [our Home Towns repository](https://github.com/cu-esiil-edu/hometowns)
Make sure to navigate to the `Code` tab. You should see a list of files in the repository.

![The Home Towns repository](/img/earth-analytics/git-version-control/pr-activity/hometowns.png)
## Step 2: Add your changes to the hometowns.csv file

  1. Click on the `hometowns.csv` file. 
     ![Click on the `hometowns.csv` file.](/img/earth-analytics/git-version-control/pr-activity/hometowns_csv.png)
  2. Then, click on the edit button in the upper right.
     ![Click the edit button](/img/earth-analytics/git-version-control/pr-activity/edit.png)
  3. Add at least one new row to the `hometowns.csv` file for your hometown -- that could be where you live now, somewhere you used to live, or another important location for you. You will add the following information to the file, separated by commas:

      * **program** you are participating in. The options include: 

        1. EDA Certificate
        2. ESIIL Stars
        3. Short Course
        4. Summit
        5. Hackathon

      * **date**: today's date in YYYY-MM-DD format (for example, January 5, 2024 would be 2024-01-05)
      * **type**: the type of entry this is. The options include:

        1. Where I live now
        2. Place I've lived
        3. Place I love

      * **label**: a few sentences about your place
      * **image_url**: the URL to an image you want to display on the hometowns map
      * **image_credit**: how you want to credit your image
      * **latitude**: the latitude of your place
      * **longitude**: the longitude of your place

The file will look something like this once you add your information:  

```csv
program,date,type,label,image_url,image_credit,latitude,longitude
Short Course,2024-04-07,Where I live now,Home of ESIIL at the University of Colorado,https://upload.wikimedia.org/wikipedia/commons/thumb/8/80/Flatirons_Winter_Sunrise_edit_2.jpg/2560px-Flatirons_Winter_Sunrise_edit_2.jpg,Taken by Jesse Varner. Modified by AzaToth. - Self-made photo. Originally uploaded on 2006-04-19 by Molas. Uploaded edit 2007-12-23 by AzaToth. CC BY-SA 2.5 https://commons.wikimedia.org/w/index.php?curid=3267545,40.016870,-105.279620
```

## Step 4:  Submit a Pull Request

Commit your changes **in a new branch**:

  1. Click the `Commit` button.
     ![Click the `Commit` button.](/img/earth-analytics/git-version-control/pr-activity/commit.png)
  2. Make sure you are committing **to a new branch**. The name of the branch should look something like `<your-username>-patch-01`, and be towards the bottom of the dialog box.
     ![Commit to a new branch](/img/earth-analytics/git-version-control/pr-activity/propose-changes.png)
  3. Write a description of what you did in the description field.
  4. Tag your instructor using `@<instructor-username>`
  5. Click `Create Pull Request`.
     ![Click `Create Pull Request`](/img/earth-analytics/git-version-control/pr-activity/create-pr.png)


Now you can make a PR:

  1. Navigate to the `Pull Requests` tab
  2. Click `New Pull Request`
  3. Select your branch, `<your-username>-patch-01` as the head and the `main` branch as the base.
  4. Write a description of your pull request
  5. Click `Submit Pull Request`.


## Activity Notes 

As you are working, be sure to keep track of where you are working and what 
repository your are pushing too.

Pull requests inform the owner of the original repository (e.g. `https://github.com/earthlab-education/ea-bootcamp-hw-1-yourusername`) that you have changed files you would like to add from a forked repository (e.g. `https://github.com/yourusername/ea-bootcamp-hw-1-yourusername`). 

A pull request to another repository is similar to a “push”. However, it allows for a few things:

1. It allows you to contribute to another repo without needing administrative privileges to make changes to the repository.
2. It allows others to review your changes and suggest corrections, additions, edits, etc.
3. It allows repository administrators control over what gets added to their project repo.

The ability to suggest changes to ANY repository, without needing administrative privileges is a powerful feature of `GitHub`. You can make as many changes as you want in your fork, and then suggest that the owner of the original repository incorporate those changes using a pull request.

## Submit Pull Requests 

This section was adapted from the `GitHub` <a href="https://guides.github.com/activities/hello-world/" target = "_blank">Hello World guide</a>. They provide an animated version of these directions.

Pull requests are the heart of collaboration on `Github.com`. When you open a pull request, you’re proposing your changes and requesting that someone review and pull in your contribution and merge them into their project.

Pull requests show diffs, (differences), of the content between your repo and the repo that you are submitting changes to. The changes, additions, and subtractions are shown in green and red.

## Wrapping Up 

**Congratulations!** You know now know how to complete a workflow on GitHub.com that involves:

1. forking a repo that you don't own,
2. cloning and making changes to the repo, 
3. pushing the changes back to your fork, and
4. submitting a pull request